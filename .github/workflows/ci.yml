# This action builds* all the pushes to master, staging and trying which are required for bors.
# Additionally it builds* for each PR.
#
# * builds includes building, checking, testing, checking format and clippy, as well as the changelog.

on:
  push:
    branches: [master, staging, trying]
  pull_request:

name: Run CI

jobs:
  check:
    name: Check
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    runs-on: ${{ matrix.os }}

    env:
      VCPKGRS_DYNAMIC: 1 # Use dynamic linking on Windows build (vcpkg)

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install libusb, libudev (linux)
        run: |
          sudo apt update
          sudo apt install -y libusb-1.0-0-dev libudev-dev
        # Only install on Ubuntu
        if: (matrix.os == 'ubuntu-latest') || (matrix.os == 'ubuntu-20.04')

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2.2.0

      - name: cargo check for probe-rs, --no-default-features
        uses: actions-rs/cargo@v1.0.3
        with:
          command: check
          args: -p probe-rs --no-default-features --locked

      - name: Run cargo check
        uses: actions-rs/cargo@v1.0.3
        with:
          command: check
          args: --all-features --locked

  test:
    name: Test Suite

    # Run the test suite on both Linux and Windows,
    # to ensure the path handling code works on both.
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest

    runs-on: ${{ matrix.os }}

    env:
      VCPKGRS_DYNAMIC: 1 # Use dynamic linking on Windows build (vcpkg)

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install libusb (linux)
        run: |
          sudo apt update
          sudo apt install -y libusb-1.0-0-dev libudev-dev
        # Only install on Ubuntu
        if: matrix.os == 'ubuntu-latest'

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: thumbv7m-none-eabi
      
      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2.2.0

      - name: Run cargo test
        uses: actions-rs/cargo@v1.0.3
        with:
          command: test
          args: --all-features --locked

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1.0.3
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install libusb
        run: |
          sudo apt update
          sudo apt install -y libusb-1.0-0-dev libudev-dev

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2.2.0

      - name: Run cargo clippy
        uses: actions-rs/clippy-check@v1.0.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features --locked
        env:
          RUSTFLAGS: '-D warnings'

  cargo-deny:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: EmbarkStudios/cargo-deny-action@v1

  doc:
    name: Check docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install libusb
        run: |
          sudo apt update
          sudo apt install -y libusb-1.0-0-dev libudev-dev

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2.2.0

      - name: Run cargo doc
        uses: actions-rs/cargo@v1.0.3
        with:
          command: doc
          args: --all-features --locked
        env:
          RUSTDOCFLAGS: '-D warnings'