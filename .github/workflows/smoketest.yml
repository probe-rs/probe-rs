on:
  push:
    branches: [master, staging, trying]
  pull_request:
  merge_group:
  workflow_dispatch:

name: Run smoke test

env:
  CARGO_INCREMENTAL: 0

# Cancel any currently running workflows from the same PR, branch, or
# tag when a new workflow is triggered.
#
# https://stackoverflow.com/a/66336834
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install target for cross-compilation
        run: rustup target add aarch64-unknown-linux-gnu

      - name: Install cross
        uses: taiki-e/install-action@v2.48.6
        with:
          tool: cross

      - name: Cache Dependencies
        uses: Swatinem/rust-cache@v2.7.7

      - name: Build smoke-tester
        run: cross build --release --target aarch64-unknown-linux-gnu -p smoke_tester

      - uses: actions/upload-artifact@v4
        with:
          name: smoke_tester
          path: target/aarch64-unknown-linux-gnu/release/smoke_tester

      - name: Build probe-rs
        run: cross build --release --target aarch64-unknown-linux-gnu -p probe-rs-tools --features ci

      - uses: actions/upload-artifact@v4
        with:
          name: probe-rs
          path: target/aarch64-unknown-linux-gnu/release/probe-rs

  test:
    runs-on: ["self-hosted", "linux", "ARM64", "${{ matrix.runner }}"]
    strategy:
      matrix:
        runner: ["smoke-test", "smoke-tester-2"]

    needs: build

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: smoke_tester

      - name: Run smoke-tester
        run: |
          chmod +x smoke_tester
          ./smoke_tester test --dut-definitions $SMOKE_TESTER_CONFIG --markdown-summary $GITHUB_STEP_SUMMARY

  embedded-test:
    runs-on: ["self-hosted", "linux", "ARM64", "${{ matrix.runner }}"]
    strategy:
      matrix:
        runner: ["smoke-tester-2"]

    needs: build

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: probe-rs

      - name: Run embedded-tests
        run: |
          chmod +x probe-rs
          if [ -n "$EMBEDDED_TEST_RUNNER" ]; then
            . $EMBEDDED_TEST_RUNNER
          fi

  benchmark:
    runs-on: ["self-hosted", "linux", "ARM64", "${{ matrix.runner }}"]
    strategy:
      matrix:
        runner: ["smoke-tester-2"]
    env:
      RUN_ID: ${{ github.run_id }}

    needs: [build, test, embedded-test]

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: probe-rs

      - name: Run benchmark
        run: |
          chmod +x probe-rs
          ./probe-rs benchmark --chip stm32f429zitx --probe "0403:6010:FT929K9H" --address 0x20000000 --word-size 32 --iterations 5
          ./probe-rs benchmark --chip stm32f051r8tx --probe "1366:0101:000778807372" --address 0x20000000 --word-size 32 --iterations 5
          ./probe-rs benchmark --chip stm32l432kcux --probe "0483:374b:0664FF505271754867105124" --address 0x20000000 --word-size 32 --iterations 5
